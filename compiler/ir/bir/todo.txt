Properly handle external (not BirElement) symbols
Maybe add externalPackages (child) property to BirModuleFragment
Back references
    Decide on arrays vs. linked lists - measure perf, esp. removing element
    Properly handle multiple refs to the same element (if that can ever happen)
    Investigate using multiple 'channels' of back refs (dedicated back refs)
    Reimplement correspondingProperty with back refs
    Investigate storing back references in aux data storage
        Also with restricted scope as other aux data
Per element aux data storage
    Restricted scope
        Per phase / per backend / serialization / fir2ir/ codegen
        Maybe dedicate a class that is both key and token for global data
    Remove reflection?
Reshape BIR tree
    Do something with LateBindFunction/Property?
By class element cache (getAllElementsOfType)
    Collapse classes into groups (e.g. collect all BirFieldAccess'es at once)
Tree mutation-while-traversing protocol
Maybe eventually remove descriptors, but they seem necessary for now
Reorder fields in Impl classes even more
Try to reduce symbol hierarchy - esp. for removed by-private-symbol references
Add BirElement.insertAfter
Future:
    By feature element cache
    Zig-zag lowering
    Compilation units